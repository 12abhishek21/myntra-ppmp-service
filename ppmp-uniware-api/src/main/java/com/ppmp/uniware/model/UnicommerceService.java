package com.ppmp.uniware.model;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2018-11-22T18:21:56.487+05:30
 * Generated source version: 3.2.7
 *
 */
@WebServiceClient(name = "UnicommerceService",
                  wsdlLocation = "https://myntra.unicommerce.com/services/soap/uniware19.wsdl",
                  targetNamespace = "http://uniware.unicommerce.com/services/")
public class UnicommerceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://uniware.unicommerce.com/services/", "UnicommerceService");
    public final static QName UnicommerceSoap11 = new QName("http://uniware.unicommerce.com/services/", "UnicommerceSoap11");
    static {
        URL url = null;
        try {
            url = new URL("https://myntra.unicommerce.com/services/soap/uniware19.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(UnicommerceService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "https://myntra.unicommerce.com/services/soap/uniware19.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public UnicommerceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public UnicommerceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UnicommerceService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public UnicommerceService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public UnicommerceService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public UnicommerceService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns Unicommerce
     */
    @WebEndpoint(name = "UnicommerceSoap11")
    public Unicommerce getUnicommerceSoap11() {
        return super.getPort(UnicommerceSoap11, Unicommerce.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Unicommerce
     */
    @WebEndpoint(name = "UnicommerceSoap11")
    public Unicommerce getUnicommerceSoap11(WebServiceFeature... features) {
        return super.getPort(UnicommerceSoap11, Unicommerce.class, features);
    }

}
